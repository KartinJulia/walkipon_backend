"""
Django settings for graffiti_backend project.

Generated by 'django-admin startproject' using Django 2.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
import json
import datetime
import urllib.request

from cryptography.x509 import load_pem_x509_certificate
from cryptography.hazmat.backends import default_backend

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
#BASE_DIR = os.path.dirname(os.path.abspath(__file__))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '$#+0)v30n2rxgiza9@3vp%+708^!zv+pf*52eblw_#vr)e%$1o'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
#DEBUG = False

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.gis',
    'rest_framework',
    'rest_framework_gis',
    #'rest_framework_jwt',
    #'rest_framework_auth0',
    'user_authentication',
    'message',
    'store',
    'user_data',
]

# Using new defined user model
AUTH_USER_MODEL = 'user_authentication.User'

#Authentication backends
AUTHENTICATION_BACKENDS = (
    #'user_app.auth0backend.Auth0',
    'django.contrib.auth.backends.ModelBackend',
)

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    #'subdomains.middleware.SubdomainURLRoutingMiddleware',
    'django.middleware.common.CommonMiddleware',
    #'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    #'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    #'disable_csrf_middleware.disable_csrf.DisableCSRF',
    #'auth0_jwt_verification_middleware.auth0_jwt_verification_middleware.Auth0Middleware'
]

ROOT_URLCONF = 'graffiti_backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'graffiti_backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        #'ENGINE': 'django.db.backends.sqlite3',
        #'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        'NAME': 'graffiti_db',
        'USER': 'graffiti_manager',
        'PASSWORD': 'graffiti',
        'HOST': 'localhost',
        'PORT': '',
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        #'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
        #'rest_framework.authentication.BasicAuthentication',
        #'rest_framework.authentication.SessionAuthentication',
        #'rest_framework.authentication.TokenAuthentication',
#        'rest_framework_auth0.authentication.Auth0JSONWebTokenAuthentication',
        'user_authentication.authentication.SessionAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
}


#AUTH0_DOMAIN = 'graffiti.auth0.com'
#API_IDENTIFIER = 'walkipon_api/v0/'

AUTH0_DOMAIN = 'dreamer2018-prototype.auth0.com'
#API_IDENTIFIER = 'Basic API'
API_IDENTIFIER = 'Test API'

jsonurl = urllib.request.urlopen('https://' + AUTH0_DOMAIN + '/.well-known/jwks.json')
jwks = json.loads(jsonurl.read())
cert = '-----BEGIN CERTIFICATE-----\n' + jwks['keys'][0]['x5c'][0] + '\n-----END CERTIFICATE-----'
certificate = load_pem_x509_certificate(cert.encode('utf-8'), default_backend())
public_key = certificate.public_key()
AUTH0_PUBLIC_KEY = jwks

ALGORITHMS = ["RS256"]

#JWT_AUTH = {
    #'JWT_PAYLOAD_GET_USERNAME_HANDLER':
    #    'rest_framework_jwt.utils.jwt_get_username_from_payload_handler',

#    'JWT_ENCODE_HANDLER':
#    'rest_framework_jwt.utils.jwt_encode_handler',

#    'JWT_DECODE_HANDLER':
#    'rest_framework_jwt.utils.jwt_decode_handler',

#    'JWT_PAYLOAD_HANDLER':
#    'rest_framework_jwt.utils.jwt_payload_handler',

    #'JWT_PAYLOAD_GET_USER_ID_HANDLER':
    #'rest_framework_jwt.utils.jwt_get_user_id_from_payload_handler',

    #'JWT_RESPONSE_PAYLOAD_HANDLER':
    #'rest_framework_jwt.utils.jwt_response_payload_handler',

#    'JWT_SECRET_KEY': SECRET_KEY,
#    'JWT_GET_USER_SECRET_KEY': None,
#    'JWT_PUBLIC_KEY': public_key,
    #'JWT_PUBLIC_KEY': AUTH0_PUBLIC_KEY,
#    'JWT_PRIVATE_KEY': None,
#    'JWT_ALGORITHM': 'RS256',
#    'JWT_VERIFY': True,
#    'JWT_VERIFY_EXPIRATION': True,
#    'JWT_LEEWAY': 0,
#    'JWT_EXPIRATION_DELTA': datetime.timedelta(seconds=300),
#    'JWT_AUDIENCE': API_IDENTIFIER,
#    'JWT_ISSUER': 'https://' + AUTH0_DOMAIN + '/',

#    'JWT_ALLOW_REFRESH': False,
#    'JWT_REFRESH_EXPIRATION_DELTA': datetime.timedelta(days=7),

#    'JWT_AUTH_HEADER_PREFIX': 'Bearer',
#    'JWT_AUTH_COOKIE': None,
#}

#AUTH0 = {
#    'CLIENTS': {
#        'default': {
#            'AUTH0_CLIENT_ID': 'vZa_xsdgwAar0KiP9my-G3dsKt5kBuBY',  #make sure it's the same string that aud attribute in your payload provides
#            'AUTH0_CLIENT_SECRET': 'LzOyJcBFJ9TfT4vO6lAJVgohJMd9yxk91vsIt66jB9G5D1R0eqkkGDqEyBTReH5H',
#            'CLIENT_SECRET_BASE64_ENCODED': True,  # default to True, if you're Auth0 user since December, maybe you should set it to False
#            'AUTH0_ALGORITHM': 'RS256',  # HS256 or RS256
            #'PUBLIC_KEY': AUTH0_PUBLIC_KEY,  # used only for RS256
#            'PUBLIC_KEY': public_key
#        }
#    },
#    'JWT_AUTH_HEADER_PREFIX': 'JWT',  # default prefix used by djangorestframework_jwt
#    'AUTHORIZATION_EXTENSION': False,  # default to False
#}


APPEND_SLASH = True

CSRF_COOKIE_SECURE = False

FILE_UPLOAD_HANDLERS = ["django.core.files.uploadhandler.MemoryFileUploadHandler",
                        "django.core.files.uploadhandler.TemporaryFileUploadHandler"]

#MEDIA_ROOT = '/Users/yangzhong/Projects/graffiti_backend_v3.0/static/'
#MEDIA_ROOT = BASE_DIR + '/static/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'static')
#MEDIA_ROOT = '/var/www/static/'

MEDIA_URL = 'http://127.0.0.1:8000/v0/static/'
#MEDIA_URL = 'http://ec2-52-25-243-106.us-west-2.compute.amazonaws.com/v2/static/'
